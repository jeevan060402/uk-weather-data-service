FROM python:3.11-slim AS base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    VIRTUAL_ENV=/opt/venv \
    PRODUCTION=1

# Build stage
FROM base AS builder

# Create virtual environment
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Set working directory
WORKDIR /app

# Create directory for persistent SQLite database
RUN mkdir -p /app/db

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install wheel
RUN pip install --upgrade pip wheel

# Copy requirements and install production dependencies
COPY requirements/production.txt ./requirements.txt
RUN pip install -r requirements.txt

# Final production stage
FROM base

# Create non-root user
RUN addgroup --system --gid 1001 djangogroup \
    && adduser --system --uid 1001 --gid 1001 djangouser

# Set working directory
WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy project files
COPY --chown=djangouser:djangogroup . .

# Ensure correct permissions for db directory
RUN mkdir -p /app/db && \
    chown -R djangouser:djangogroup /app/db && \
    chmod 755 /app/db

# Switch to non-root user
USER djangouser

# Collect static files
RUN python manage.py collectstatic --noinput

# Expose production port
EXPOSE 8000

# Production server command
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "config.wsgi:application"]