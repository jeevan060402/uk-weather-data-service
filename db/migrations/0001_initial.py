# Generated by Django 5.1.9 on 2025-05-10 11:54

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Parameter",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "code",
                    models.CharField(help_text="Parameter code as used in MetOffice URLs", max_length=20, unique=True),
                ),
                ("name", models.CharField(help_text="Full name of the parameter", max_length=100)),
                ("unit", models.CharField(help_text="Unit of measurement", max_length=20)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Optional description of the parameter", null=True),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "code",
                    models.CharField(help_text="Region code as used in MetOffice URLs", max_length=20, unique=True),
                ),
                ("name", models.CharField(help_text="Full name of the region", max_length=100)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WeatherData",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1800),
                            django.core.validators.MaxValueValidator(2100),
                        ]
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("win", "Winter"),
                            ("spr", "Spring"),
                            ("sum", "Summer"),
                            ("aut", "Autumn"),
                            ("ann", "Annual"),
                        ],
                        default="monthly",
                        help_text="Type of period this data represents (monthly, seasonal, or annual)",
                        max_length=10,
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        blank=True,
                        help_text="Month number (1-12). Used only for monthly data.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                ("value", models.FloatField(help_text="The measured value")),
                (
                    "anomaly",
                    models.FloatField(blank=True, help_text="Anomaly from reference period if available", null=True),
                ),
                (
                    "parameter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="weather_data", to="db.parameter"
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="weather_data", to="db.region"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Weather Data",
                "ordering": ["-year", "period_type", "-month"],
                "indexes": [
                    models.Index(
                        fields=["region", "parameter", "year", "period_type", "month"],
                        name="db_weatherd_region__80b665_idx",
                    ),
                    models.Index(fields=["year", "period_type", "month"], name="db_weatherd_year_7a8a39_idx"),
                ],
                "unique_together": {("region", "parameter", "year", "period_type", "month")},
            },
        ),
    ]
